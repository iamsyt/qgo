/*
 * board.h
 */

#ifndef BOARD_H
#define BOARD_H

#include <vector>

#include <QtGui>

class Gatter
{
public:
	Gatter(QGraphicsScene *Canvas, int board_size);
	~Gatter();
	void hide (int x, int y);
	void show (int x, int y);
	void resize(int offsetX, int offsetY, int square_size);
	void showAll();

private:
	int board_size;
	QGraphicsScene *canvas;
	std::vector< std::vector<QGraphicsLineItem *> > VGatter, HGatter ;
	std::vector<QGraphicsLineItem *> VGatter2;
	QMap<int,QGraphicsEllipseItem*> hoshisList ;
};


class Board : public QGraphicsView
{
	Q_OBJECT

public:
	Board(QWidget *parent=0, QGraphicsScene *c=0, int size=19);
	~Board();
	void clearData();
	void changeSize();

private:
	QGraphicsScene *canvas;
	Gatter *gatter;

	std::vector< std::vector<QGraphicsLineItem *> > VGatter, HGatter ;
	QGraphicsLineItem *VGatter2[];
//	ImageHandler *imageHandler;
	//BoardHandler *boardHandler;
	int board_size, offset, offsetX, offsetY, square_size, board_pixel_size;
	bool showCoords;
	bool showSGFCoords;
	bool showCursor;
	bool antiClicko;
	bool lockResize ;

protected:
	void calculateSize();
	void drawBackground();
	void initGatter();
	void drawGatter();
	void drawCoordinates();
	void drawStarPoint(int x, int y);
	void resizeBoard(int w, int h);
	int convertCoordsToPoint(int c, int o);
	void resizeEvent(QResizeEvent*);
};

#endif
